									   <%require IEx %>
									   <br>
				  <div class="col-lg-12">
					<div class="panel panel-default">
						<div class="panel-heading">
							<i class="fa fa-bar-chart-o fa-fw"></i> Hourly Pax Summary  
							<div class="pull-right">
								<div class="btn-group">
								  
								</div>
							</div>
						</div>
						<!-- /.panel-heading -->
						<div class="panel-body">
							<div class="table-responsive">
										<table class="table table-bordered table-hover table-striped">
										<thead>
										  <tr>
											<th>Sales Date</th>
											<th>Total Sales</th>
											<th>Total Pax</th>
											<th>12 AM</th>
											<th>01 AM</th>
											<th>02 AM</th>
											<th>03 AM</th>
											<th>04 AM</th>
											<th>05 AM</th>
											<th>06 AM</th>
											<th>07 AM</th>
											<th>08 AM</th>
											<th>09 AM</th>
											<th>10 AM</th>
											<th>11 AM</th>
											<th>12 PM</th>
											<th>01 PM</th>
											<th>02 PM</th>
											<th>03 PM</th>
											<th>04 PM</th>
											<th>05 PM</th>
											<th>06 PM</th>
											<th>07 PM</th>
											<th>08 PM</th>
											<th>09 PM</th>
											<th>10 PM</th>
											<th>11 PM</th>

										  </tr>
										</thead>
										<tbody>
											<%= for date <- @date_range do %>
											<tr>

												<td><%= date %></td>
												<% data_row = Enum.filter(@totals, fn x -> x.day == date.day end )%>
												<td><%= :erlang.float_to_binary(Enum.map(data_row, fn x -> x.grand_total end) |> Enum.sum(),decimals: 2) %></td>
												<td><%= :erlang.float_to_binary(Enum.map(data_row, fn x -> x.sum end) |> Enum.sum(),decimals: 0) %></td>
												<% hours = Enum.filter(@totals, fn x -> (x.day == date.day and x.month == date.month and x.year == date.year) end) %>
													<% hour_range = 1..24 %>
														<%= for hr <- hour_range do %>
														<% data = Enum.filter(hours, fn x -> x.hour == hr end)  %>
															<%= if data != [] do %>
															<td><%= :erlang.float_to_binary(hd(data).sum,decimals: 0)%> </td>
															<% else %>
															<td>0</td>
														<% end %>
													<% end %>
											</tr>
											<% end %>
									  
										</tbody>
										</table>
									</div>
						</div>
						<!-- /.panel-body -->
					</div>



<br>       
 
                  <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <i class="fa fa-bar-chart-o fa-fw"></i> Hourly Pax Chart
                            <div class="pull-right">
                                <div class="btn-group">
                                  
                                </div>
                            </div>
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body">
                            <div id="hourly_pax"></div>
                        </div>
                        <!-- /.panel-body -->
                    </div>
                  </div>
           
                 </div>

<%# 

<div id="reportrange" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc; width: 100%">
  <i class="fa fa-calendar"></i>&nbsp;
  <span></span> <i class="fa fa-caret-down"></i>
</div>

<script type="text/javascript">
$(function() {

  var start = moment().subtract(29, 'days');
  var end = moment();

  function cb(start, end) {
    $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
  }

  $('#reportrange').daterangepicker({
    startDate: start,
    endDate: end,
    ranges: {
       'Today': [moment(), moment()],
       'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
       'Last 7 Days': [moment().subtract(6, 'days'), moment()],
       'Last 30 Days': [moment().subtract(29, 'days'), moment()],
       'This Month': [moment().startOf('month'), moment().endOf('month')],
       'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
    }
  }, cb);

  cb(start, end);

});
</script>
 %>

 <script src="/highchartjs/highcharts.js"></script>
    <script src="/highchartjs/highcharts-3d.js"></script>
    <script src="/highchartjs/series-label.js"></script>
    <script src="/highchartjs/exporting.js"></script>
    <script src="/highchartjs/export-data.js"></script>

<script type="text/javascript">



Highcharts.chart("hourly_pax", {

  

  title: {
    text: 'Hourly Pax Chart'
  },

  subtitle: {
    text: 'Hourly Pax and Transaction'
  },

  yAxis: {
    title: {
      text: 'Values'
    }
  },
  legend: {
    layout: 'horizontal',
    align: 'center',
    verticalAlign: 'bottom'
  },

  plotOptions: {
    series: {
      label: {
        connectorAllowed: false
      },
      pointStart: 2010
    }
  },
  series: [{
    name: 'Sales',
    data: [43934, 52503, 57177, 69658, 97031, 119931, 137133, 154175]
  }, {
    name: 'Taxes',
    data: [24916, 24064, 29742, 29851, 32490, 30282, 38121, 40434]
  }, {
    name: 'Discounts',
    data: [11744, 17722, 16005, 19771, 20185, 24377, 32147, 39387]
  }, {
    name: 'Service Charge',
    data: [null, null, 7988, 12169, 15112, 22452, 34400, 34227]
  }, {
    name: 'Transaction',
    data: [12908, 5948, 8105, 11248, 8989, 11816, 18274, 18111]
  }],

  responsive: {
    rules: [{
      condition: {
        maxWidth: 500
      },
      chartOptions: {
        legend: {
          layout: 'horizontal',
          align: 'center',
          verticalAlign: 'bottom'
        }
      }
    }]
  }

});


</script>


  